name: Copilot Release Notes Draft

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  prepare-context:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          tags: true
      - name: Collect release context
        id: context
        run: |
          tag="${GITHUB_REF_NAME}"
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          
          # Get previous tag for range
          prev_tag=$(git tag --list 'v[0-9]*.[0-9]*.[0-9]*' --sort=-version:refname | sed -n '2p' || echo "")
          echo "previous_tag=$prev_tag" >> "$GITHUB_OUTPUT"
          
          # Generate commit context for Copilot
          if [[ -n "$prev_tag" ]]; then
            echo "## Commit Context for $tag" > COPILOT_CONTEXT.md
            echo "Range: $prev_tag..$tag" >> COPILOT_CONTEXT.md
            echo "" >> COPILOT_CONTEXT.md
            echo "### Raw Commits:" >> COPILOT_CONTEXT.md
            git log --no-merges --format='- %s (%h)' "$prev_tag..$tag" >> COPILOT_CONTEXT.md
            echo "" >> COPILOT_CONTEXT.md
            echo "### Detailed Changes:" >> COPILOT_CONTEXT.md
            git log --no-merges --format='**%s** (%h)%n%b%n---' "$prev_tag..$tag" >> COPILOT_CONTEXT.md
          else
            echo "## Commit Context for $tag (First Release)" > COPILOT_CONTEXT.md
            echo "### All Commits:" >> COPILOT_CONTEXT.md
            git log --no-merges --format='- %s (%h)' "$tag" >> COPILOT_CONTEXT.md
          fi
          
          # Add any recent conversation context (placeholder for future enhancement)
          echo "" >> COPILOT_CONTEXT.md
          echo "### Repository Context:" >> COPILOT_CONTEXT.md
          echo "- Repository: ${{ github.repository }}" >> COPILOT_CONTEXT.md
          echo "- Branch: ${{ github.ref_name }}" >> COPILOT_CONTEXT.md
          echo "- Workflow: Automated release notes generation via Copilot" >> COPILOT_CONTEXT.md
          
      - name: Create draft release with placeholder
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${{ steps.context.outputs.tag }}"
          prev_tag="${{ steps.context.outputs.previous_tag }}"
          
          cat > DRAFT_BODY.md << EOF
          <!-- COPILOT TODO: Write release notes based on COPILOT_CONTEXT.md -->
          
          ## ðŸ¤– Waiting for Copilot to author release notes...
          
          **Instructions for Copilot:**
          1. Review the commit context in the uploaded artifact
          2. Consider the conversation history and recent work
          3. Write comprehensive release notes covering:
             - Key features and improvements
             - Bug fixes and changes
             - Breaking changes (if any)
             - Notable internal improvements
          4. Replace this placeholder content
          5. Publish the release when ready
          
          **Context Summary:**
          - Tag: \`$tag\`
          - Previous: \`$prev_tag\`
          - Commits: See artifact for details
          
          ---
          *This is an automated draft. Copilot will replace this content with proper release notes.*
          EOF
          
          # Create or update draft release
          if gh release view "$tag" >/dev/null 2>&1; then
            gh release edit "$tag" --draft --notes-file DRAFT_BODY.md
          else
            gh release create "$tag" --draft --notes-file DRAFT_BODY.md --title "Release $tag"
          fi
          
          echo "âœ… Draft release created for $tag - waiting for Copilot to author release notes"
          
      - name: Upload context for Copilot
        uses: actions/upload-artifact@v4
        with:
          name: copilot-release-context
          path: |
            COPILOT_CONTEXT.md
            DRAFT_BODY.md
