name: Release (required notes file)

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for required release notes file
        run: |
          tag="${GITHUB_REF_NAME}"
          notes_file=".github/RELEASE_NOTES.md"
          
          echo "Checking for release notes file: $notes_file"
          
          if [[ ! -f "$notes_file" ]]; then
            echo "::error::Release notes file not found: $notes_file"
            echo "::error::"
            echo "::error::Cannot create release without release notes!"
            echo "::error::"
            echo "::error::To fix this:"
            echo "::error::1. Create the file: $notes_file"
            echo "::error::2. Write your release notes in Markdown format"
            echo "::error::3. Commit and push the file"
            echo "::error::4. Re-run this workflow (or push the tag again)"
            echo "::error::"
            echo "::error::Example content:"
            echo "::error::### New Features"
            echo "::error::- Feature 1"
            echo "::error::- Feature 2"
            echo "::error::"
            echo "::error::### Bug Fixes"
            echo "::error::- Fix 1"
            exit 1
          fi
          
          # Check if file is empty (only whitespace)
          if [[ ! -s "$notes_file" ]] || [[ -z "$(grep -v '^[[:space:]]*$' "$notes_file")" ]]; then
            echo "::error::Release notes file exists but is empty: $notes_file"
            echo "::error::Please add meaningful release notes and try again."
            exit 1
          fi
          
          echo "✓ Release notes file found and contains content"
          echo "notes_file=$notes_file" >> "$GITHUB_ENV"

      - name: Create GitHub Release
        run: |
          tag="${GITHUB_REF_NAME}"
          echo "Creating release for $tag using notes from $notes_file"
          gh release create "$tag" --notes-file "$notes_file"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update changelog
        run: |
          tag="${GITHUB_REF_NAME}"
          echo "Updating CHANGELOG.md for $tag"
          
          # Use our existing append-changelog script
          chmod +x scripts/append-changelog.sh
          ./scripts/append-changelog.sh "$tag" "$notes_file"
          
          echo "Changelog updated successfully"

      - name: Clean up release notes file
        run: |
          tag="${GITHUB_REF_NAME}"
          notes_file=".github/RELEASE_NOTES.md"
          
          echo "Deleting release notes file to prevent reuse: $notes_file"
          rm "$notes_file"
          
          echo "✓ Deleted $notes_file - must be recreated for next release"

      - name: Commit changelog and cleanup
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Add changelog and note the deleted file
          git add CHANGELOG.md
          git add -u .github/RELEASE_NOTES.md  # Stage the deletion
          
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            echo "Committing changelog update and cleanup for ${GITHUB_REF_NAME}"
            git commit -m "chore: release ${GITHUB_REF_NAME} - update changelog and clean release notes"
            git push
          fi